import numpy as np
import matplotlib.pyplot as plt


pareto_pcn = np.array([
    [3503, 108],
    [3683, 80],
    [3522, 102],
    [3227, 139],
    [3164, 149],
    [3586, 94],
    [3661, 87],
    [3599, 91],
    [3177, 145],
    [3627, 89],
    [3686, 79],
    [3436, 112],
    [3510, 107],
    [3512, 105],
    [3699, 74],
    [3418, 117],
    [3528, 95],
    [3423, 115],
    [3680, 84],
    [3494, 111],
    [3050, 152],
    [3693, 76],
    [3266, 131],
    [3330, 122],
    [3314, 129]
])

pareto_drl = np.array([
    [10, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [72, 57],
    [0, 66],
    [36, 58],
    [0, 66],
    [0, 66],
    [0, 66],
    [0, 66],
    [72, 57],
    [0, 66],
    [50, 56],
    [0, 66],
    [0, 66],
    [0, 66],
    [24, 66],
    [146, 47],
    [401, 15]
])

pareto_nsga2 = np.array([
    [2780, 175],
    [1536, 335],
    [2662, 199],
    [1678, 330],
    [2507, 212],
    [2629, 201],
    [1844, 294],
    [1953, 291],
    [2444, 219],
    [1749, 314],
    [2219, 243],
    [1756, 303],
    [2117, 265],
    [1726, 316],
    [1959, 283],
    [2119, 254],
    [2353, 224],
    [2338, 232],
    [2250, 238],
    [2086, 266],
    [2031, 267]
])

# pareto_nsga2 = np.array([ 500
#     [11814, 1116],
#     [8560, 1533],
#     [9074, 1454],
#     [11353, 1138],
#     [10954, 1201],
#     [10776, 1210],
#     [9266, 1412],
#     [9286, 1408],
#     [9721, 1370],
#     [9439, 1398],
#     [9949, 1311],
#     [10253, 1263],
#     [9657, 1372],
#     [10556, 1244],
#     [9856, 1328],
#     [9989, 1300],
#     [9760, 1344],
#     [9810, 1343],
#     [9475, 1396]
# ])

pcn_inference = np.array([
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [125, 111],
    [125, 111],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [125, 111],
    [125, 111],
    [125, 111],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [125, 111],
    [125, 111],
    [125, 111],
    [125, 111],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [815, 21],
    [125, 111],
    [125, 111],
    [125, 111],
    [125, 111],
    [125, 111],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [878, 16],
    [878, 16],
    [878, 16],
    [125, 111],
    [125, 111],
    [125, 111],
    [125, 111],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [878, 16],
    [878, 16],
    [878, 16],
    [878, 16],
    [878, 16],
    [878, 16],
    [125, 111],
    [125, 111],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [878, 16],
    [878, 16],
    [878, 16],
    [878, 16],
    [878, 16],
    [878, 16],
    [815, 21],
    [878, 16],
    [815, 21],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [815, 21],
    [815, 21],
    [815, 21],
    [815, 21],
    [815, 21],
    [815, 21],
    [815, 21],
    [257, 95],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [815, 21],
    [257, 95],
    [257, 95],
    [175, 103],
    [217, 97],
    [80, 120],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [217, 97],
    [175, 103],
    [80, 120],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [80, 120],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130],
    [0, 130]
])



# plot pareto front
# plt.scatter(pareto_front_all[:, 0], pareto_front_all[:, 1], label='Pareto Front')
plt.scatter(pareto_pcn[:, 0], pareto_pcn[:, 1], label='PCN')
# plt.scatter(pareto_drl[:, 0], pareto_drl[:, 1], label='DRL')
plt.scatter(pareto_nsga2[:, 0], pareto_nsga2[:, 1], label='NSGA-II')
# plt.scatter(pcn_inference[:, 0], pcn_inference[:, 1], label='PCN Inference')
# plt.scatter(all[:, 0], all[:, 1], label='All')
plt.xlabel('cost')
plt.ylabel('makespan')
plt.title('Pareto Front')
plt.legend()
plt.show()